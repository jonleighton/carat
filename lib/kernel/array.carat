class Array
  def initialize(*contents)
    Primitive.initialize(*contents)
  end
  
  def length
    Primitive.length
  end
  
  def each(&block)
    Primitive.each(&block)
  end
  
  def <<(item)
    Primitive.push(item)
  end
  
  def [](index)
    Primitive.get(index)
  end
  
  def []=(index, value)
    Primitive.set(index, value)
  end
  
  def ==(other)
    if length != other.length
      return false
    end
    
    i = 0
    while i != length
      if self[i] != other[i]
        return false
      end
      i += 1
    end
    
    return true
  end
  
  def to_a
    self
  end
  
  def to_s
    map { |item| item.to_s }.join("\n")
  end
  
  def map
    ary = []
    each { |item| ary << yield(item) }
    ary
  end
  
  def inspect
    "[" + map { |item| item.inspect }.join(", ") + "]"
  end
  
  def join(joiner = "")
    result = ""
    i = 1
    each do |item|
      result << item.to_s
      
      if i != length
        result << joiner.to_s
      end
      
      i = i + 1
    end
    result
  end
end
