require 'cspec'

class KernelSpecA < Exception
end

describe "Kernel#raise" do
  it "should raise a RuntimeError when called with no arguments" do
    lambda { raise }.should.raise_error(RuntimeError)
  end
  
  it "should raise the exception if one is given directly" do
    lambda { raise KernelSpecA.new }.should.raise_error(KernelSpecA)
  end
  
  it "should raise a RuntimeError with the string provided if a string is the first argument" do
    lambda { raise "ERROR" }.should.raise_error(RuntimeError, "ERROR")
  end
  
  it "should raise a new instance if an exception class is given" do
    lambda { raise KernelSpecA }.should.raise_error(KernelSpecA)
  end
end

describe "Kernel#lambda" do
  it "should return a lambda" do
    lambda { zzz }.class.should == Lambda
  end
end

describe "Kernel#yield" do
  it "should call the current block with the arguments provided" do
    args = [3, 5, 2]
    block = lambda { xxx }
    
    foo = lambda do
      yield(*args, &block)
    end
    
    args2 = nil
    block2 = nil
    
    foo.call { |*args2, &block2| nil }
    
    args2.should == args
    block2.should == block
  end
end
